{"version":3,"sources":["model/card.js","model/cards.js","cardsData.js","app.js","index.js"],"names":["Card","data","Object","classCallCheck","this","type","number","unicode","color","cls","concat","open","cards","map","_","require","setDataOnDrag","card","fromPlace","event","JSON","stringify","cardData","dataTransfer","setData","allowDrop","preventDefault","BACKCARD","last","playingCards","dropRight","shuffeledCards","shuffle","Game","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","stock","getStockForNewGame","waste","foundations","spade","club","diamond","heart","tableau","getTableauForNewGame","winMsg","moveToFoundation","bind","assertThisInitialized","onStockClicked","refillStock","moveToTableau","moveFromWasteToTableau","moveFromFoundationToTableau","moveFromTableauToTableau","createdTableau","cardIndex","pile","filledPile","index","push","takeRight","setState","slice","reverse","isEmpty","topStockCard","pileIndex","insertedTableauDeck","modifiedTableau","updateInsertedDeck","modifiedWaste","modifiedDeck","modifiedFoundations","assign","defineProperty","objVal","othVal","key","undefined","deck","_this2","some","c","isEqualWith","ignoreOpenCondition","_this3","tableauDecks","filter","doesContain","findIndex","d","isEqual","head","_this4","getSenderDecksIndex","x","numberOfCards","length","withdrawnDeck","lastCard","isColorDifferent","parseInt","receivedData","parse","getData","isDropAllowedAtTableau","modifiedTableauDeck","modifiedFoundation","getModifiedFoundationAfterInsertion","checkWinningStatus","isDropAllowedAtFoundation","moveFromTableauToFoundation","moveFromWasteToFoundation","hasWon","finishGame","values","every","startGame","react_default","a","createElement","className","src","alt","height","width","onClick","resetGame","Stock","Waste","Foundations","drop","Tableau","React","Component","faceDownImg","app_EmptyCardHolder","onDrop","topCard","app_CardDiv","from","Foundation","CardDiv","draggable","onDragOverMethod","onDragStart","onDragOver","EmptyCardHolder","TableauPile","allCardsinDiv","dropMethod","showCard","tableauCards","piles","createTableauPiles","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.81885c4f.chunk.js","sourcesContent":["class Card {\n  constructor(data) {\n\t\tthis.type = data.type;\n\t\tthis.number = data.number;\n\t\tthis.unicode = data.unicode;\n\t\tthis.color = data.color;\n\t\tthis.cls = `${this.color}-card`;\n\t\tthis.open = false;\n\t}\n}\n\nexport default Card;\n","import cardsData from \"../cardsData\";\nimport Card from './card';\n\nconst cards = cardsData.map(\n  data => new Card(data)\n);\n\nexport default cards;\n","const cardsData = [\n  {\n    type: \"spade\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0A1}\"\n  },\n  {\n    type: \"spade\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0A2}\"\n  },\n  {\n    type: \"spade\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0A3}\"\n  },\n  {\n    type: \"spade\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0A4}\"\n  },\n  {\n    type: \"spade\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0A5}\"\n  },\n  {\n    type: \"spade\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0A6}\"\n  },\n  {\n    type: \"spade\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0A7}\"\n  },\n  {\n    type: \"spade\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0A8}\"\n  },\n  {\n    type: \"spade\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0A9}\"\n  },\n  {\n    type: \"spade\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0AA}\"\n  },\n  {\n    type: \"spade\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0AB}\"\n  },\n  {\n    type: \"spade\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0AD}\"\n  },\n  {\n    type: \"spade\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0AE}\"\n  },\n  {\n    type: \"club\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0D1}\"\n  },\n  {\n    type: \"club\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0D2}\"\n  },\n  {\n    type: \"club\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0D3}\"\n  },\n  {\n    type: \"club\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0D4}\"\n  },\n  {\n    type: \"club\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0D5}\"\n  },\n  {\n    type: \"club\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0D6}\"\n  },\n  {\n    type: \"club\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0D7}\"\n  },\n  {\n    type: \"club\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0D8}\"\n  },\n  {\n    type: \"club\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0D9}\"\n  },\n  {\n    type: \"club\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0DA}\"\n  },\n  {\n    type: \"club\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0DB}\"\n  },\n  {\n    type: \"club\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0DD}\"\n  },\n  {\n    type: \"club\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0DE}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0C1}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0C2}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0C3}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0C4}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0C5}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0C6}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0C7}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0C8}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0C9}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0CA}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0CB}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0CD}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0CE}\"\n  },\n  {\n    type: \"heart\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0B1}\"\n  },\n  {\n    type: \"heart\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0B2}\"\n  },\n  {\n    type: \"heart\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0B3}\"\n  },\n  {\n    type: \"heart\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0B4}\"\n  },\n  {\n    type: \"heart\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0B5}\"\n  },\n  {\n    type: \"heart\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0B6}\"\n  },\n  {\n    type: \"heart\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0B7}\"\n  },\n  {\n    type: \"heart\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0B8}\"\n  },\n  {\n    type: \"heart\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0B9}\"\n  },\n  {\n    type: \"heart\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0BA}\"\n  },\n  {\n    type: \"heart\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0BB}\"\n  },\n  {\n    type: \"heart\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0BD}\"\n  },\n  {\n    type: \"heart\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0BE}\"\n  },\n  {\n    type: \"BackOfCard\",\n    number: \"53\",\n    color: \"back\",\n    unicode: \"\\u{1F0A0}\"\n  }\n];\n\nexport default cardsData;\n","import React from \"react\";\nimport cards from \"./model/cards\";\nimport Card from \"./model/card\";\nconst _ = require(\"lodash\");\n\nconst setDataOnDrag = function(card, fromPlace, event) {\n  let data = JSON.stringify({ cardData: card, fromPlace });\n  event.dataTransfer.setData(\"text\", data);\n};\n\nconst allowDrop = function(event) {\n  event.preventDefault();\n};\n\nconst BACKCARD = _.last(cards);\nconst playingCards = _.dropRight(cards);\nconst shuffeledCards = _.shuffle(playingCards);\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stock: this.getStockForNewGame(shuffeledCards),\n      waste: [],\n      foundations: { spade: [], club: [], diamond: [], heart: [] },\n      tableau: this.getTableauForNewGame(shuffeledCards),\n      winMsg: \"\"\n    };\n\n    this.moveToFoundation = this.moveToFoundation.bind(this);\n    this.onStockClicked = this.onStockClicked.bind(this);\n    this.refillStock = this.refillStock.bind(this);\n    this.moveToTableau = this.moveToTableau.bind(this);\n    this.moveFromWasteToTableau = this.moveFromWasteToTableau.bind(this);\n    this.moveFromFoundationToTableau = this.moveFromFoundationToTableau.bind(\n      this\n    );\n    this.moveFromTableauToTableau = this.moveFromTableauToTableau.bind(this);\n  }\n\n  getTableauForNewGame(cards) {\n    let createdTableau = [];\n    let cardIndex = 0;\n    for (let pile = 1; pile < 8; pile++) {\n      let filledPile = [];\n      for (let index = 0; index < pile; index++) {\n        filledPile.push(cards[cardIndex]);\n        cardIndex++;\n      }\n      createdTableau.push(filledPile);\n    }\n    return createdTableau;\n  }\n\n  getStockForNewGame(cards) {\n    return _.takeRight(cards, 24);\n  }\n\n  refillStock() {\n    this.setState({\n      stock: this.state.waste.slice().reverse(),\n      waste: []\n    });\n  }\n\n  onStockClicked() {\n    if (_.isEmpty(this.state.stock)) {\n      this.refillStock();\n      return;\n    }\n    const topStockCard = _.last(this.state.stock);\n\n    this.setState({\n      stock: _.dropRight(this.state.stock),\n      waste: this.state.waste.concat(topStockCard)\n    });\n  }\n\n  updateInsertedDeck(cards, pileIndex) {\n    const insertedTableauDeck = this.state.tableau[pileIndex].concat(cards);\n    const modifiedTableau = this.state.tableau.slice();\n    modifiedTableau[pileIndex] = insertedTableauDeck;\n    return modifiedTableau;\n  }\n\n  moveFromWasteToTableau(card, pileIndex) {\n    const modifiedTableau = this.updateInsertedDeck(card, pileIndex);\n    const modifiedWaste = _.dropRight(this.state.waste);\n\n    this.setState({\n      tableau: modifiedTableau,\n      waste: modifiedWaste\n    });\n  }\n\n  moveFromFoundationToTableau(card, pileIndex) {\n    const modifiedTableau = this.updateInsertedDeck(card, pileIndex);\n    const modifiedDeck = _.dropRight(this.state.foundations[card.type]);\n    const modifiedFoundations = Object.assign({}, this.state.foundations, {\n      [card.type]: modifiedDeck\n    });\n\n    this.setState({\n      tableau: modifiedTableau,\n      foundations: modifiedFoundations\n    });\n  }\n\n  ignoreOpenCondition(objVal, othVal, key) {\n    return key === \"open\" ? true : undefined;\n  }\n\n  doesContain(deck, card) {\n    return deck.some(c => _.isEqualWith(c, card, this.ignoreOpenCondition));\n  }\n\n  getSenderDecksIndex(card) {\n    const tableauDecks = this.state.tableau.slice();\n    const deck = tableauDecks.filter(deck => this.doesContain(deck, card));\n    return _.findIndex(tableauDecks, d => _.isEqual(d, _.head(deck)));\n  }\n\n  moveFromTableauToTableau(card, pileIndex) {\n    const index = this.getSenderDecksIndex(card);\n    const cardIndex = _.findIndex(this.state.tableau[index], x =>\n      _.isEqualWith(x, card, this.ignoreOpenCondition)\n    );\n\n    const numberOfCards = this.state.tableau[index].length - cardIndex;\n    const cards = _.takeRight(this.state.tableau[index], numberOfCards);\n    const modifiedTableau = this.updateInsertedDeck(cards, pileIndex);\n\n    const withdrawnDeck = _.dropRight(modifiedTableau[index], numberOfCards);\n    modifiedTableau[index] = withdrawnDeck;\n\n    this.setState({ tableau: modifiedTableau });\n  }\n\n  isDropAllowedAtTableau(card, index) {\n    if (_.isEmpty(this.state.tableau[index])) return card.number === \"13\";\n\n    const lastCard = _.last(this.state.tableau[index]);\n    const isColorDifferent = lastCard.color !== card.color;\n    const isNextCard = parseInt(lastCard.number) - 1 === parseInt(card.number);\n    return isNextCard && isColorDifferent;\n  }\n\n  moveToTableau(index, event) {\n    event.preventDefault();\n    const receivedData = JSON.parse(event.dataTransfer.getData(\"text\"));\n    const card = new Card(receivedData.cardData);\n\n    if (!this.isDropAllowedAtTableau(card, index)) return;\n\n    if (receivedData.fromPlace === \"waste\") {\n      this.moveFromWasteToTableau(card, index);\n      return;\n    }\n\n    if (receivedData.fromPlace === \"tableau\") {\n      this.moveFromTableauToTableau(card, index);\n      return;\n    }\n\n    if (receivedData.fromPlace === \"foundation\") {\n      this.moveFromFoundationToTableau(card, index);\n      return;\n    }\n  }\n\n  getModifiedFoundationAfterInsertion(card) {\n    const modifiedDeck = this.state.foundations[card.type].concat(card);\n    return Object.assign({}, this.state.foundations, {\n      [card.type]: modifiedDeck\n    });\n  }\n\n  moveFromTableauToFoundation(card) {\n    let modifiedTableau = this.state.tableau.slice();\n    const index = this.getSenderDecksIndex(card);\n    const modifiedTableauDeck = _.dropRight(this.state.tableau[index]);\n    modifiedTableau[index] = modifiedTableauDeck;\n    const modifiedFoundation = this.getModifiedFoundationAfterInsertion(card);\n    this.setState(\n      {\n        foundations: modifiedFoundation,\n        tableau: modifiedTableau\n      },\n      this.checkWinningStatus\n    );\n  }\n\n  moveFromWasteToFoundation(card) {\n    let modifiedWaste = this.state.waste.slice();\n    modifiedWaste = _.dropRight(modifiedWaste);\n    const modifiedFoundation = this.getModifiedFoundationAfterInsertion(card);\n    this.setState(\n      {\n        foundations: modifiedFoundation,\n        waste: modifiedWaste\n      },\n      this.checkWinningStatus\n    );\n  }\n\n  isDropAllowedAtFoundation(card) {\n    if (_.isEmpty(this.state.foundations[card.type])) {\n      return card.number === \"1\";\n    }\n    const lastCard = _.last(this.state.foundations[card.type]);\n    return parseInt(lastCard.number) + 1 === parseInt(card.number);\n  }\n\n  moveToFoundation(event) {\n    event.preventDefault();\n    const receivedData = JSON.parse(event.dataTransfer.getData(\"text\"));\n    const card = new Card(receivedData.cardData);\n\n    if (!this.isDropAllowedAtFoundation(card)) return;\n\n    if (receivedData.fromPlace === \"tableau\") {\n      this.moveFromTableauToFoundation(card);\n    }\n\n    if (receivedData.fromPlace === \"waste\") {\n      this.moveFromWasteToFoundation(card);\n    }\n  }\n\n  checkWinningStatus() {\n    if (this.hasWon()) this.finishGame();\n  }\n\n  hasWon() {\n    const piles = Object.values(this.state.foundations);\n    return piles.every(deck => deck.length === 13);\n  }\n\n  resetGame() {\n    this.startGame(shuffeledCards);\n  }\n\n  startGame(shuffeledCards) {\n    this.setState({\n      stock: this.getStockForNewGame(shuffeledCards),\n      waste: [],\n      foundations: { spade: [], club: [], diamond: [], heart: [] },\n      tableau: this.getTableauForNewGame(shuffeledCards),\n      winMsg: \"\"\n    });\n  }\n\n  finishGame() {\n    this.setState({\n      winMsg: (\n        <div className=\"win-overlay\">\n          <div className=\"win-msg\">Congrats you Won!</div>\n          <div>\n            <img\n              src={\"./trophy.gif\"}\n              alt=\"trophy\"\n              height=\"300px\"\n              width=\"400px\"\n            />\n          </div>\n          <div>\n            <button onClick={this.resetGame.bind(this)}>Reset</button>\n          </div>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <header>\n          <img src=\"./header_new.gif\" alt=\"heading\" />\n        </header>\n        <div className={\"main\"}>\n          <div className={\"sidebar\"}>\n            {\" \"}\n            <img src=\"./side.jpg\" height=\"500px\" width=\"300px\" alt=\"side\" />\n          </div>\n          <div className=\"board\">\n            {this.state.winMsg}\n            <div className={\"upper-part\"}>\n              <Stock cards={this.state.stock} onClick={this.onStockClicked} />\n              <Waste cards={this.state.waste} />\n              <Foundations\n                cards={this.state.foundations}\n                drop={this.moveToFoundation}\n              />\n            </div>\n            <div className={\"lower-part\"}>\n              <Tableau cards={this.state.tableau} drop={this.moveToTableau} />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction Stock(props) {\n  let faceDownImg = BACKCARD.unicode;\n  if (props.cards.length === 0) {\n    faceDownImg = <img src={\"./refresh_icon.png\"} alt=\"refresh\" />;\n  }\n  return (\n    <div className={\"stock-pile\"}>\n      <span className={\"back-card\"} onClick={props.onClick}>\n        {faceDownImg}\n      </span>\n    </div>\n  );\n}\n\nfunction Waste(props) {\n  let card = <EmptyCardHolder onDrop={null} />;\n  if (!_.isEmpty(props.cards)) {\n    const topCard = _.last(props.cards);\n    topCard.open = true;\n    card = <CardDiv card={topCard} from={\"waste\"} onDrop={null} />;\n  }\n  return <div className={\"waste-cards-area\"}>{card}</div>;\n}\n\nfunction Foundations(props) {\n  const cards = props.cards;\n  return (\n    <div className={\"foundation-area\"}>\n      <Foundation cards={cards.spade} drop={props.drop} />\n      <Foundation cards={cards.club} drop={props.drop} />\n      <Foundation cards={cards.diamond} drop={props.drop} />\n      <Foundation cards={cards.heart} drop={props.drop} />\n    </div>\n  );\n}\n\nconst CardDiv = function(props) {\n  const draggable = props.card.open ? true : false;\n  const cls = props.card.open ? props.card.cls : BACKCARD.cls;\n  const unicode = props.card.open ? props.card.unicode : BACKCARD.unicode;\n  const onDragOverMethod = props.onDrop ? allowDrop : null;\n  return (\n    <div\n      className={cls}\n      draggable={draggable}\n      onDragStart={setDataOnDrag.bind(null, props.card, props.from)}\n      onDrop={props.onDrop}\n      onDragOver={onDragOverMethod}\n    >\n      {unicode}\n    </div>\n  );\n};\n\nconst EmptyCardHolder = function(props) {\n  const onDragOverMethod = props.onDrop ? allowDrop : null;\n  return (\n    <div\n      className={\"base-card-holder\"}\n      onDrop={props.onDrop}\n      onDragOver={onDragOverMethod}\n    />\n  );\n};\n\nfunction Foundation(props) {\n  let topCard = _.last(props.cards);\n  let card = null;\n  if (topCard) {\n    topCard.open = true;\n    card = <CardDiv card={topCard} from={\"foundation\"} onDrop={null} />;\n  }\n  return (\n    <div\n      className={\"foundation-box\"}\n      onDrop={props.drop}\n      onDragOver={allowDrop}\n    >\n      {card}\n    </div>\n  );\n}\n\nfunction TableauPile(props) {\n  let key = 0;\n\n  const showCard = function(cards) {\n    if (_.isEmpty(cards)) return <EmptyCardHolder onDrop={props.drop} />;\n\n    const allCardsinDiv = [];\n    cards.map(card => {\n      card.open = _.isEqual(_.last(cards), card) ? true : card.open;\n      const dropMethod = _.isEqual(_.last(cards), card) ? props.drop : null;\n      return allCardsinDiv.push(\n        <CardDiv key={key++} card={card} from={\"tableau\"} onDrop={dropMethod} />\n      );\n    });\n    return allCardsinDiv;\n  };\n\n  return <div className={\"tableau-pile\"}>{showCard(props.cards)}</div>;\n}\n\nfunction Tableau(props) {\n  const tableauCards = props.cards;\n  function createTableauPiles(cards) {\n    let piles = [];\n    for (let index = 0; index < 7; index++) {\n      piles.push(\n        <TableauPile\n          key={index}\n          cards={cards[index]}\n          drop={props.drop.bind(null, index)}\n        />\n      );\n    }\n    return piles;\n  }\n\n  return (\n    <div className={\"tableau-area\"}>{createTableauPiles(tableauCards)}</div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './app.js';\n\nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}